#!/usr/bin/env python

import sys, time
import numpy as np
import cv2
import roslib
import rospy

from cv_bridge import CvBridge, CvBridgeError
from sensor_msgs.msg import CompressedImage
from sensor_msgs.msg import Image

class image_feature:

    def __init__(self):
        # topic where we publish
        self.image_pub = rospy.Publisher("compressed_img",Image, queue_size = 10)
        self.bridge = CvBridge()

        # subscribed Topic
        self.subscriber = rospy.Subscriber("/camera/image/compressed",CompressedImage, self.callback,  queue_size = 10)

    def callback(self, ros_data):
        #print("meme")
        np_arr = np.fromstring(ros_data.data, np.uint8)
        image_np = cv2.imdecode(np_arr, cv2.CV_LOAD_IMAGE_COLOR)
        outt = self.bridge.cv2_to_imgmsg(image_np, encoding="passthrough")
        self.image_pub.publish(outt)

        #cv2.imshow('cv_img', image_np)
        #cv2.waitKey(2)

        #### Create CompressedIamge ####
        #msg = CompressedImage()
        #msg.header.stamp = rospy.Time.now()
        #msg.format = "jpeg"
        #msg.data = np.array(cv2.imencode('.jpg', image_np)[1]).tostring()
        # Publish new image
        #self.image_pub.publish(msg)
        #self.subscriber.unregister()

def main(args):
    ic = image_feature()
    rospy.init_node('image_feature', anonymous=True)
    try:
        rospy.spin()
    except KeyboardInterrupt:
        print "Shutting down ROS Image feature detector module"
    cv2.destroyAllWindows()

if __name__ == '__main__':
    main(sys.argv)
